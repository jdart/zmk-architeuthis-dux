/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define SYM_L 1
#define NUM_L 3

&lt { quick_tap_ms = <100>; };

/ {
        behaviors {
                combos {
                        compatible = "zmk,combos";
                        c_lalt {
                                timeout-ms = <50>;
                                key-positions = <20 21>;
                                bindings = <&sk LALT>;
                        };
                        c_lgui {
                                timeout-ms = <50>;
                                key-positions = <21 22>;
                                bindings = <&sk LGUI>;
                        };
                        c_laltgui {
                                timeout-ms = <50>;
                                key-positions = <20 21 22>;
                                bindings = <&sk LA(LGUI)>;
                        };
                        c_lctrl {
                                timeout-ms = <50>;
                                key-positions = <22 23>;
                                bindings = <&sk LCTRL>;
                        };
                        c_ralt {
                                timeout-ms = <50>;
                                key-positions = <28 29>;
                                bindings = <&sk LALT>;
                        };
                        c_rgui {
                                timeout-ms = <50>;
                                key-positions = <27 28>;
                                bindings = <&sk LGUI>;
                        };
                        c_raltgui {
                                timeout-ms = <50>;
                                key-positions = <27 28 29>;
                                bindings = <&sk LA(LGUI)>;
                        };
                        c_rctrl {
                                timeout-ms = <50>;
                                key-positions = <26 27>;
                                bindings = <&sk LCTRL>;
                        };
                        c_lmgui {
                                timeout-ms = <50>;
                                key-positions = <11 12>;
                                bindings = <&kp LGUI>;
                        };
                        c_lmsft {
                                timeout-ms = <50>;
                                key-positions = <11 13>;
                                bindings = <&kp LSFT>;
                        };
                        c_lmguisft {
                                timeout-ms = <50>;
                                key-positions = <11 12 13>;
                                bindings = <&kp LS(LGUI)>;
                        };
                        c_esc {
                                timeout-ms = <50>;
                                key-positions = <12 17>;
                                bindings = <&kp ESCAPE>;
                        };
                        c_rmgui {
                                timeout-ms = <50>;
                                key-positions = <17 18>;
                                bindings = <&kp LGUI>;
                        };
                        c_rmsft {
                                timeout-ms = <50>;
                                key-positions = <16 18>;
                                bindings = <&kp LSFT>;
                        };
                        c_rmguisft {
                                timeout-ms = <50>;
                                key-positions = <16 17 18>;
                                bindings = <&kp LS(LGUI)>;
                        };


                        c_LBRC {
                                timeout-ms = <50>;
                                key-positions = <17 27>;
                                bindings = <&kp LBRC>;
                        };
                        c_RBRC {
                                timeout-ms = <50>;
                                key-positions = <7 17>;
                                bindings = <&kp RBRC>;
                        };
                        c_LPAR {
                                timeout-ms = <50>;
                                key-positions = <18 28>;
                                bindings = <&kp LPAR>;
                        };
                        c_RPAR {
                                timeout-ms = <50>;
                                key-positions = <8 18>;
                                bindings = <&kp RPAR>;
                        };
                        c_LBKT {
                                timeout-ms = <50>;
                                key-positions = <16 26>;
                                bindings = <&kp LBKT>;
                        };
                        c_RBKT {
                                timeout-ms = <50>;
                                key-positions = <6 16>;
                                bindings = <&kp RBKT>;
                        };
                        c_AGL {
                                timeout-ms = <50>;
                                key-positions = <1 11>;
                                bindings = <&kp LA(LG(LARW))>;
                        };
                        c_AGR {
                                timeout-ms = <50>;
                                key-positions = <2 12>;
                                bindings = <&kp LA(LG(RARW))>;
                        };
                        c_GBL {
                                timeout-ms = <50>;
                                key-positions = <11 21>;
                                bindings = <&kp LG(LBKT)>;
                        };
                        c_GBR {
                                timeout-ms = <50>;
                                key-positions = <12 22>;
                                bindings = <&kp LG(RBKT)>;
                        };
                        c_CLR {
                                timeout-ms = <50>;
                                key-positions = <1 2 4>;
                                bindings = <&bt BT_CLR>;
                        };
                        c_RST {
                                timeout-ms = <50>;
                                key-positions = <1 2 3>;
                                bindings = <&reset>;
                        };
                };
        };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
    &kp Q       &kp W        &kp E          &kp R        &kp T          &kp Y    &kp U         &kp I           &kp O       &kp P
    &kp A       &kp S        &kp D          &kp F        &kp G          &kp H    &kp J         &kp K           &kp L       &kp SEMI
    &kp Z       &kp X        &kp C          &kp V        &kp B          &kp N    &kp M         &kp COMMA       &kp DOT     &kp FSLH
                             &lt NUM_L BKSP &kp TAB                     &kp RET  &lt NUM_L SPACE
                        >;
                };

                symbol_layer {
                        bindings = <
    &kp EXCL   &kp AT     &kp LBRC  &kp RBRC  &trans            &trans    &kp UNDER  &kp BSLH   &kp SQT     &kp DQT
    &trans     &kp DLLR   &kp LPAR  &kp RPAR  &kp GRAVE         &kp PLUS  &kp MINUS  &kp FSLH   &kp STAR    &kp DEL
    &trans     &kp CARET  &kp LBKT  &kp RBKT  &kp TILDE         &kp AMPS  &kp PIPE   &trans     &kp HASH    &kp PRCNT
                                    &kp EQUAL &trans            &trans    &kp EQUAL
                        >;
                };

                number_layer {
                        bindings = <
    &trans      &kp N7      &kp N8       &kp N9      &trans             &trans    &kp LA(LG(LARW))    &kp LA(LG(RARW))    &trans      &trans
    &trans      &kp N4      &kp N5       &kp N6      &trans             &kp LARW  &kp DARW  &kp UARW  &kp RARW     &bt BT_CLR
    &kp N0      &kp N1      &kp N2       &kp N3      &trans             &trans    &kp LG(LBKT)   &kp LG(RBKT) &trans &reset
                            &kp EQUAL    &trans                         &trans    &kp EQUAL
                        >;
                };

                number_layer_c {
                        bindings = <
    &kp PLUS    &kp N7      &kp N8       &kp N9      &kp PRCNT          &kp TILDE  &kp EXCL    &kp DQT   &kp SQT     &kp AT
    &kp MINUS   &kp N4      &kp N5       &kp N6      &kp STAR           &kp LARW   &kp DARW    &kp UARW  &kp RARW    &kp CARET
    &kp N0      &kp N1      &kp N2       &kp N3      &kp FSLH           &kp GRAVE  &kp AMPS    &kp PIPE  &kp UNDER   &kp HASH
                            &kp EQUAL    &kp DLLR                       &trans     &kp EQUAL
                        >;
                };
        };
};

/**
  0   1      2    3   4         5   6   7   8   9
| x | AG< | AG> | x | x |     | x | ] | } | ) | x |
| x | G[ | G]   | x | x |     | x | [ | { | ( | x |
*/
